<html><head><link rel=stylesheet href="scaven.css" Type=Text/css><meta http-equiv=Content-Type content="text/html; charset=windows-1251"><title> Blitz3D Туториал</title></head><body id=t1><div id=t2><table id=t3> <tr id=t22> <td id=t23> <p id=t8><span id=t7>6. Трёхмерный курсор.</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>В этот раз я покажу, как можно управлять объектом с помощью мышки.</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>Итак, берём шаблон:</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <table id=t24> <tr id=t46> <td id=t47> <p id=t27><span id=t28>Graphics3D </span><span id=t29>640</span><span id=t30>,</span><span id=t29>480</span><span id=t30>,</span><span id=t29>16</span><span id=t30>,</span><span id=t29>1</span></p> <p id=t27><span id=t28>SetBuffer BackBuffer</span><span id=t30>()</span></p> <p id=t27><span id=t30>&nbsp;</span></p> <p id=t27><span id=t31>cam</span><span id=t30>=</span><span id=t28>CreateCamera</span><span id=t30>()</span></p> <p id=t27><span id=t28>PositionEntity </span><span id=t31>cam</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,</span><span id=t29>5</span><span id=t30>,</span><span id=t29>0</span></p> <p id=t27><span id=t29>&nbsp;</span></p> <p id=t27><span id=t31>lit</span><span id=t30>=</span><span id=t28>CreateLight</span><span id=t30>()</span></p> <p id=t27><span id=t30>&nbsp;</span></p> <p id=t27><span id=t31>cur</span><span id=t30>=</span><span id=t28>CreateSphere</span><span id=t30>(8)</span></p> <p id=t27><span id=t28>EntityColor</span><span id=t31> cur</span><span id=t30>,</span><span id=t29>255</span><span id=t30>,</span><span id=t29>215</span><span id=t30>,</span><span id=t29>0</span><span id=t30></span></p> <p id=t27><span id=t28>PositionEntity</span><span id=t31> cur</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,</span><span id=t29>10</span><span id=t30></span></p> <p id=t27><span id=t30>&nbsp;</span></p> <p id=t27><span id=t31>pln</span><span id=t30>=</span><span id=t28>CreatePlane</span><span id=t30>()</span></p> <p id=t27><span id=t31>tex</span><span id=t30>=</span><span id=t28>LoadTexture</span><span id=t30>(</span><span id=t52>&quot;Picture.bmp&quot;</span><span id=t30>)</span></p> <p id=t27><span id=t28>ScaleTexture</span><span id=t31> tex</span><span id=t30>,</span><span id=t29>10</span><span id=t30>,</span><span id=t29>10</span><span id=t30></span></p> <p id=t27><span id=t28>EntityTexture</span><span id=t31> pln</span><span id=t30>,</span><span id=t31>tex</span></p> <p id=t27><span id=t30>&nbsp;</span></p> <p id=t27><span id=t28>Repeat</span></p> <p id=t27><span id=t28>&nbsp;</span></p> <p id=t27><span id=t28><span id=t15> </span></span></p> <p id=t27><span id=t29><span id=t15> </span></span></p> <p id=t27><span id=t29><span id=t15> </span></span><span id=t28>UpdateWorld</span></p> <p id=t27><span id=t28><span id=t15> </span>RenderWorld</span></p> <p id=t27><span id=t28>&nbsp;</span></p> <p id=t27><span id=t28><span id=t15> </span>Flip</span></p> <p id=t27><span id=t28>&nbsp;</span></p> <p id=t27><span id=t28>Until KeyHit</span><span id=t30>(</span><span id=t29>1</span><span id=t30>)</span></p> <p id=t27><span id=t30>&nbsp;</span></p> <p id=t48><span id=t28>End</span><span id=t33></span></p> </td> </tr> </table> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>Здесь мы создаём всё, что нам нужно, расставляем и создаём цикл. Новые команды: </span><b><span id=t43>CreateSphere</span><span id=t43>(количество сегментов)</span></b><span id=t9> – Создаёт сферу (а то чего мы всё куб да куб </span><span id=t10><span id=t11>J</span></span><span id=t9>) в скобках указываем количество сегментов – 8 = 224 полигона, 16 = 960 полигонов и 32 = 3968 полигонов. Естественно, чем больше полигонов, тем «круглее» наш шарик, и тем больше памяти он занимает. </span><b><span id=t43>EntityColor</span><span id=t43> объект, красный, зелёный, синий</span></b><span id=t9> – Эта команда закрашивает данный объект цветом </span><span id=t9>RGB</span><span id=t9>, где указывается сколько должно быть красного, зелёного, синего цвета, значения которых могут быть от 0 до 255. Вот, например, 0,0,0 – чёрный цвет, 255,255,255 – белый, 0,255,0 – самый зелёный </span><span id=t10><span id=t11>J</span></span><span id=t9>…</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>Теперь насчёт мышки. Хотя курсор и не показывается на экране, на самом деле он есть – то есть он двигается, если вы двигаете мышку, остаётся только определить на сколько. Просто поставьте эти команды в начале цикла:</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <table id=t24> <tr id=t46> <td id=t47> <p id=t27><span id=t31>mx</span><span id=t30>=</span><span id=t28>MouseXSpeed</span><span id=t30>()</span></p> <p id=t27><span id=t31>my</span><span id=t30>=</span><span id=t28>MouseYSpeed</span><span id=t30>()</span></p> <p id=t48><span id=t28>MoveMouse</span><span id=t31> </span><span id=t29>320</span><span id=t30>,</span><span id=t29>240</span><span id=t33></span></p> </td> </tr> </table> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>Так, что эта вся хрень значит? Поясняю. </span><b><span id=t43>MouseXSpeed</span><span id=t43>()</span></b><span id=t9> – это функция, которая говорит нам об изменении </span><span id=t9>X</span><span id=t9> </span><span id=t9>координаты мышки на экране, с момента последнего вызова этой функции. Ну короче, на сколько пикселей её в последний раз передвинули (По </span><span id=t9>X</span><span id=t9>)! </span><b><span id=t43>MouseYSpeed</span><span id=t43>()</span></b><span id=t9> – тоже самое, но по </span><span id=t9>Y</span><span id=t9> (Есть ещё </span><b><span id=t43>MouseZSpeed</span><span id=t43>()</span></b><span id=t9> – это передвижение колёсика). </span><b><span id=t43>MoveMouse</span><span id=t43> </span></b><b><span id=t43>x</span><span id=t43>,</span></b><b><span id=t43>y</span></b><span id=t9> – устанавливает курсор мышки в данную точку (это делается для того, чтобы он не подходил к краю, и мы всегда могли бы узнать передвижение мышки… короче надо… </span><span id=t10><span id=t11>J</span></span><span id=t9>). </span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>Итак, мы знаем, на сколько у нас передвигается мышка с каждым кадром, осталось только передвигать сферу, в зависимости от передвижения мышки (данные о передвижении находятся у нас в переменных </span><span id=t43>mx</span><span id=t9> и </span><span id=t43>my</span><span id=t9>):</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <table id=t24> <tr id=t46> <td id=t47> <p id=t48><span id=t28>MoveEntity</span><span id=t31> cur</span><span id=t30>,</span><span id=t31>mx</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,-</span><span id=t31>my</span><span id=t33></span></p> </td> </tr> </table> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>Теперь можно запускать программу… да не трогайте вы клавиатуру – теперь кубик можно передвигать мышкой! Правда кубик какой-то гиперактивный… нужно сбавить ему скорость – просто заменим эту строчку на:</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <table id=t24> <tr id=t46> <td id=t47> <p id=t48><span id=t28>MoveEntity</span><span id=t31> cur</span><span id=t30>,</span><span id=t31>mx</span><span id=t30>*.</span><span id=t29>1</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,-</span><span id=t31>my</span><span id=t30>*.</span><span id=t29>1</span><span id=t33></span></p> </td> </tr> </table> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>Так будет намного удобнее! Всё – у нас есть трёхмерный курсор!</span></p> <p id=t8><span id=t9>Но мы на этом не остановимся!!! Мы пойдём дальше! Сделаем так, чтобы камеру можно было вертеть:</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <table id=t24> <tr id=t46> <td id=t47> <p id=t27><span id=t28>If</span><span id=t31> </span><span id=t28>KeyDown</span><span id=t30>(</span><span id=t29>203</span><span id=t30>) </span><span id=t28>TurnEntity</span><span id=t31> cam</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,</span><span id=t29>2</span><span id=t30>,</span><span id=t29>0</span></p> <p id=t48><span id=t28>If</span><span id=t31> </span><span id=t28>KeyDown</span><span id=t30>(</span><span id=t29>205</span><span id=t30>) </span><span id=t28>TurnEntity</span><span id=t31> cam</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,-</span><span id=t29>2</span><span id=t30>,</span><span id=t29>0</span><span id=t33></span></p> </td> </tr> </table> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>Если вы теперь запустите программу, то обратите внимание, что когда камера повёрнута нормально (как стоит в начале) – то всё как бы нормально – двигаешь мышку влево, сфера двигается влево, двигаешь вперёд – и сфера двигается вперёд… но стоит нам повернуться на 90 градусов влево, как становится совсем неудобно: передвигаешь мышку влево – курсор уходит вперёд, передвигаешь мышку вперёд – курсор уходит вправо! А если повернуться на 180 градусов – то всё вообще становится наоборот. Почему же происходит такое неправильное движение? Вообще-то движение-то правильное – оно как было, так и осталось – просто мы теперь смотрим на это под другим углом. Что же теперь камеру не вертеть что ли? Конечно нет! Настоящие программеры не сдаются! (…они просто ленятся… </span><span id=t10><span id=t11>J</span></span><span id=t9>) Значит будем думать вместе… хм… это… э-э-э…а может?… хотя нет…э… дА! Есть идея! Смотрите: Сфера всегда повёрнута прямо. Когда камера повёрнута прямо, получается так, что их оси совпадают по направлению, а когда камера повёрнута налево, то получается что её ось </span><span id=t9>X</span><span id=t9> совпадает с осью </span><span id=t9>Z</span><span id=t9> сферы. Ну в общем такая фи гня… короче, надо сделать так, чтобы их оси совпадали, говоря человеческим языком – чтобы они направлены были в одну сторону! Но как это сделать?</span></p> <p id=t8><span id=t9>…………………………………………</span><span id=t10><span id=t11>J</span></span><span id=t9></span></p> <p id=t8><span id=t9>Очень просто!</span></p> <p id=t8><span id=t9>Так:</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <table id=t24> <tr id=t46> <td id=t47> <p id=t27><span id=t31>ex</span><span id=t30>=</span><span id=t28>EntityPitch</span><span id=t30>#(</span><span id=t31>cam</span><span id=t30>)</span></p> <p id=t27><span id=t31>ey</span><span id=t30>=</span><span id=t28>EntityYaw</span><span id=t30>#(</span><span id=t31>cam</span><span id=t30>)</span></p> <p id=t27><span id=t31>ez</span><span id=t30>=</span><span id=t28>EntityRoll</span><span id=t30>#(</span><span id=t31>cam</span><span id=t30>)</span></p> <p id=t48><span id=t28>RotateEntity </span><span id=t31>cur</span><span id=t30>,</span><span id=t31>ex</span><span id=t30>,</span><span id=t31>ey</span><span id=t30>,</span><span id=t31>ez</span><span id=t33></span></p> </td> </tr> </table> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>…или так (результат один и тот же):</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <table id=t24> <tr id=t46> <td id=t47> <p id=t48><span id=t28>RotateEntity </span><span id=t31>cur</span><span id=t30>,</span><span id=t28>EntityPitch</span><span id=t30>#(</span><span id=t31>cam</span><span id=t30>),</span><span id=t28>EntityYaw</span><span id=t30>#(</span><span id=t31>cam</span><span id=t30>),</span><span id=t28>EntityRoll</span><span id=t30>#(</span><span id=t31>cam</span><span id=t30>)</span><span id=t33></span></p> </td> </tr> </table> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>Итак новые командосы </span><span id=t10><span id=t11>J</span></span><span id=t9>:</span></p> <p id=t8><b><span id=t43>EntityPitch</span><span id=t43>#(объект)</span></b><span id=t9> – функция, возвращающая угол наклона данного объекта относительно оси </span><span id=t9>X </span><span id=t9>мировой системы координат</span></p> <p id=t8><b><span id=t43>EntityYaw</span><span id=t43>#(объект)</span></b><span id=t9> - -//- по оси </span><span id=t9>Y</span><span id=t9></span></p> <p id=t8><b><span id=t43>EntityRoll</span><span id=t43>#(объект)</span></b><span id=t9> - -//- по оси </span><span id=t9>Z</span><span id=t9></span></p> <p id=t8><b><span id=t43>RotateEntity</span><span id=t43> объект, </span></b><b><span id=t43>X</span><span id=t43>,</span></b><b><span id=t43>Y</span><span id=t43>,</span></b><b><span id=t43>Z</span></b><span id=t9> – В общем похожа на команду </span><span id=t9>TurnEntity </span><span id=t9>(тем, что она объект поворачивает), вот только делает она это относительно мировой системы координат, а не системы координат объекта.</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>А теперь у нас есть курсор, которому позавидует любой программер (программирующий в 2Д </span><span id=t10><span id=t11>J</span></span><span id=t9>)!</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8>&nbsp;<span id=t9></span></p> </td> <td id=t37> <p id=t8><span id=t9><span id=t15> </span></span><b><span id=t16>Оглавление:</span></b></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t17><span id=t18>0.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_0.htm">Введение</a></span></p> <p id=t17><span id=t18>1.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_1.htm">В начале была Тьма</a></span></p> <p id=t17><span id=t18>2.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_2.htm">Есть ли жизнь в <span id=t20>DirectX</span></a></span></p> <p id=t17><span id=t18>3.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_3.htm">Свобода и Власть 3Д (0)</a></span></p> <p id=t17><span id=t18>4.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_4.htm">Свобода и Власть 3Д (1)</a></span></p> <p id=t17><span id=t18>5.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_5.htm">2Д в 3Д</a></span></p> <p id=t17><span id=t18>6.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_6.htm">Трёхмерный курсор</a></span></p> <p id=t17><span id=t18>7.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_7.htm">Родительская зависимость или Привязки</a></span></p> <p id=t17><span id=t18>8.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_8.htm">Фишки с привязками</a></span></p> <p id=t17><span id=t18>9.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_9.htm">Коллизион Детекшн или как устроен мир…</a></span></p> <p id=t21><span id=t18>10.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_10.htm">Первая 3Д игра. Часть 0 – основы движка</a></span></p> <p id=t21><span id=t18>11.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_11.htm">Первая 3Д игра. Часть 1 – разработка движка</a></span></p> <p id=t21><span id=t18>12.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_12.htm">Первая 3Д игра. Часть 2 – устранение багов</a></span></p> <p id=t21><span id=t18>13.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_13.htm">Первая 3Д игра. Часть 3 – внешний вид</a></span></p> <p id=t21><span id=t18>14.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_14.htm">Первая 3Д игра. Часть 4 – от массива к спискам</a></span></p> <p id=t21><span id=t18>15.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_15.htm">Первая 3Д игра. Часть 5 – оптимизация кода</a></span></p> <p id=t21><span id=t18>16.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_16.htm">Первая 3Д игра. Часть 6 – завершение</a></span></p> <p id=t21><span id=t18>17.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_17.htm">Выведение</a></span></p> <p id=t8><span id=t18>&nbsp;</span></p> <p id=t6><span id=t18>&nbsp;</span></p> <p id=t8>&nbsp;<span id=t18></span></p> </td> </tr></table><p id=t6>&nbsp;</p></div></body></html>