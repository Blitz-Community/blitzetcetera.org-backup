<html><head><link rel=stylesheet href="scaven.css" Type=Text/css><meta http-equiv=Content-Type content="text/html; charset=windows-1251"><title> Blitz3D “уториал</title></head><body id=t1><div id=t2><table id=t3> <tr id=t22> <td id=t23> <p id=t51>9.  оллизион ƒетекшн или как устроен мирЕ</p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>¬от мы плавно подошли к главной составной части физики Ѕлитц3ƒ (не надо только пугатьс€ Ц никаких формул типа </span><span id=t9>mc</span><span id=t9>^2 вспоминать не нужно </span><span id=t10><span id=t11>J</span></span><span id=t9> Ц здесь вы их сами будете придумывать!), и одного из его самых главных компонентов Ц проверки на соприкосновение! я думаю, после того, как мы его разберЄм, вы будете готовы к тому, что бы приступить к самой разработке игрЕ </span><span id=t10><span id=t11>J<span id=t11>J<span id=t11>J</span></span></span></span><span id=t9>!!! </span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>Ќу, ладно, начнЄм Ц чего врем€-то тер€ть? </span><span id=t10><span id=t11>J</span></span><span id=t9>:</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <table id=t24> <tr id=t46> <td id=t47> <p id=t27><span id=t28>SeedRnd MilliSecs</span><span id=t30>() </span></p> <p id=t27><span id=t30>&nbsp;</span></p> <p id=t27><span id=t28>Graphics3D </span><span id=t29>640</span><span id=t30>,</span><span id=t29>480</span><span id=t30>,</span><span id=t29>16</span><span id=t30>,</span><span id=t29>1</span></p> <p id=t27><span id=t28>SetBuffer BackBuffer</span><span id=t30>()</span></p> <p id=t27><span id=t30>&nbsp;</span></p> <p id=t27><span id=t28>Const </span><span id=t31>TypePlayer</span><span id=t30>=</span><span id=t29>1</span><span id=t30>,</span><span id=t31>TypeWall</span><span id=t30>=</span><span id=t29>2</span></p> <p id=t27><span id=t29>&nbsp;</span></p> <p id=t27><span id=t31>Player</span><span id=t30>=</span><span id=t28>CreateSphere</span><span id=t30>()</span></p> <p id=t27><span id=t28>EntityType </span><span id=t31>Player</span><span id=t30>,</span><span id=t31>TypePlayer</span></p> <p id=t27><span id=t31>&nbsp;</span></p> <p id=t27><span id=t31>Wall</span><span id=t30>=</span><span id=t28>CreateCube</span><span id=t30>()</span></p> <p id=t27><span id=t28>PositionEntity </span><span id=t31>Wall</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,</span><span id=t29>10</span></p> <p id=t27><span id=t28>EntityType </span><span id=t31>Wall</span><span id=t30>,</span><span id=t31>TypeWall</span></p> <p id=t27><span id=t31>&nbsp;</span></p> <p id=t27><span id=t28>Collisions </span><span id=t31>TypePlayer</span><span id=t30>,</span><span id=t31>TypeWall</span><span id=t30>,</span><span id=t29>2</span><span id=t30>,</span><span id=t29>3</span></p> <p id=t27><span id=t29>&nbsp;</span></p> <p id=t27><span id=t31>cam</span><span id=t30>=</span><span id=t28>CreateCamera</span><span id=t30>()</span></p> <p id=t27><span id=t28>PositionEntity </span><span id=t31>cam</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,</span><span id=t29>30</span><span id=t30>,</span><span id=t29>0</span></p> <p id=t27><span id=t28>TurnEntity </span><span id=t31>cam</span><span id=t30>,</span><span id=t29>90</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,</span><span id=t29>0</span></p> <p id=t27><span id=t29>&nbsp;</span></p> <p id=t27><span id=t31>lit</span><span id=t30>=</span><span id=t28>CreateLight</span><span id=t30>()</span></p> <p id=t27><span id=t28>TurnEntity </span><span id=t31>lit</span><span id=t30>,</span><span id=t29>70</span><span id=t30>,</span><span id=t29>70</span><span id=t30>,</span><span id=t29>0</span></p> <p id=t27><span id=t29>&nbsp;</span></p> <p id=t27><span id=t29><span id=t15>†</span></span></p> <p id=t27><span id=t28>Repeat</span></p> <p id=t27><span id=t28><span id=t15>†</span></span></p> <p id=t27><span id=t28><span id=t15>†</span>If KeyDown</span><span id=t30>(</span><span id=t29>200</span><span id=t30>) </span><span id=t28>MoveEntity </span><span id=t31>Player</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,.</span><span id=t29>1</span></p> <p id=t27><span id=t29><span id=t15>†</span></span><span id=t28>If KeyDown</span><span id=t30>(</span><span id=t29>208</span><span id=t30>) </span><span id=t28>MoveEntity </span><span id=t31>Player</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,-.</span><span id=t29>1</span></p> <p id=t27><span id=t29><span id=t15>†</span></span><span id=t28>If KeyDown</span><span id=t30>(</span><span id=t29>203</span><span id=t30>) </span><span id=t28>TurnEntity </span><span id=t31>Player</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,</span><span id=t29>2</span><span id=t30>,</span><span id=t29>0</span></p> <p id=t27><span id=t29><span id=t15>†</span></span><span id=t28>If KeyDown</span><span id=t30>(</span><span id=t29>205</span><span id=t30>) </span><span id=t28>TurnEntity </span><span id=t31>Player</span><span id=t30>,</span><span id=t29>0</span><span id=t30>,-</span><span id=t29>2</span><span id=t30>,</span><span id=t29>0</span></p> <p id=t27><span id=t29><span id=t15>†</span></span></p> <p id=t27><span id=t29><span id=t15>†</span></span><span id=t28>UpdateWorld</span></p> <p id=t27><span id=t28><span id=t15>†</span>RenderWorld</span></p> <p id=t27><span id=t28>&nbsp;</span></p> <p id=t27><span id=t28><span id=t15>†</span>Flip</span></p> <p id=t27><span id=t28>&nbsp;</span></p> <p id=t27><span id=t28>Until KeyHit</span><span id=t30>(</span><span id=t29>1</span><span id=t30>)</span></p> <p id=t27><span id=t30>&nbsp;</span></p> <p id=t48><span id=t28>End</span><span id=t33></span></p> </td> </tr> </table> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>»так, в этой программке представлен основной принцип проверки на прикосновени€. «десь мы создаЄм шар и куб, затем, стрелками управл€ем шаром, и, если вы захотите заехать внутрь куба, у вас ничего не получитс€<span id=t15>† </span></span><span id=t10><span id=t11>J</span></span><span id=t9>! ”–ј! Ёто и есть тот самый коллизион детекшн Ц он не пропускает одни объекты в другие, если, конечно перед этим указать, какие именно объекты, и куда именно не пускать (</span><span id=t10><span id=t11>J</span></span><span id=t9>) Е</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>ј теперь разберЄм все нововведени€.</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>—начала мы создали две константы Ц </span><span id=t43>TypePlayer</span><span id=t9>, равной единице и </span><span id=t43>TypeWall</span><span id=t9>, равной двойке. «ачем мы это сделали? “ак это чтобы не запутатьс€! я думаю, потом поймЄте в чЄм именноЕ ≈щЄ, вы, наверное, заметили, ещЄ одну новую команду Ц </span><b><span id=t43>EntityType</span><span id=t43> </span><span id=t43>объект, тип объекта</span></b><span id=t9> Ц присваивает данному объекту данный тип. “ип (в данном случае) - это просто цифры. «десь мы вместо цифр использовали константы Ц чтобы не запутатьс€, да и чтобы легко можно было прочитать Ц к какому типу этот объект относитс€, и с чем соприкасаетс€ ( а то представьте такую ситуациюЕ у нас есть (какие-то) цифры дл€ главного геро€, стены, врагов, ну, и прочей др€ни Ц всЄ это мы вначале создани€ проекта распределили, расставили, и благополучно забыли за ненадобностьюЕ но вдруг в середине проекта вы вспоминаете, что забыли задать проверку на столкновение между врагом и героем (Ену это уж € утрируюЕ </span><span id=t10><span id=t11>J</span></span><span id=t9>), и начинаете судорожно вспоминать кака€ же цифра у вас обозначала врага, просматриваете килобайты кодаЕ ну в общем можно поступить намного удобней, задав сразу константы, таким вот образом “ип_√ерой = 1, “ип_—тена = 2, “ип_ѕол = 3, “ип_¬раг = 13, “ип_¬раг_Ѕосс = 113Е “ип_кака€-то_хрень_-_просто_вал€тьс€_где-нибудь_будет = </span><span id=t59>2147483647</span><span id=t9>Е </span><span id=t10><span id=t11>J</span></span><span id=t9>! » мы тут уже не цифры пишем, а типа Ђ оллизион между “ипом_¬рагом и “ипом_√ероемї!!!</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>—леду€ща€ команда: </span><b><span id=t43>Collision</span><span id=t43> </span><span id=t43>первый тип, второй тип, метод, результат</span></b><span id=t9> Ц в общем то, что она делает € только что написал, ну а подробней:</span></p> <p id=t8><span id=t9>ѕервый тип Ц объект, который будет провер€тьс€ на столкновени€.</span></p> <p id=t8><span id=t9>¬торой тип Ц объект, с которым эти самые столкновени€ и будут происходитьЕ </span><span id=t10><span id=t11>J</span></span><span id=t9></span></p> <p id=t8><span id=t9>ћетод:</span></p> <p id=t8><span id=t9><span id=t49>††††††††††† </span>1 Ц соприкосновение сферы со сферой</span></p> <p id=t8><span id=t9><span id=t49>††††††††††† </span>2 Ц соприкосновение сферы с полигонами</span></p> <p id=t8><span id=t9><span id=t49>††††††††††† </span>3 Ц соприкосновение сферы с параллелепипедом </span></p> <p id=t8><span id=t9>–езультат:</span></p> <p id=t8><span id=t9><span id=t49>††††††††††† </span>1 Ц остановка</span></p> <p id=t8><span id=t9><span id=t49>††††††††††† </span>2 Ц скольжение Ц полное скольжение</span></p> <p id=t8><span id=t9><span id=t49>††††††††††† </span>3 Ц скольжение Ц защита объекта от скольжени€ вниз (может € перевЄл не правильно, конечно, ну в общем этот метод создан дл€ работы с террайнами в 3ƒ)</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>“еперь постараюсь обо всЄм этом, да поподробнееЕ начнЄм с методов:</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9> ак видите, объект, который будет провер€тьс€ на столкновени€ (первый объект) должен будет иметь Ђсферуї столкновени€ Ц так как методы столкновени€ бывают только сферы с чем-нибудь. ¬еличину этой самой сферы проверки можно задать дл€ каждого объекта отдельно Ц с помощью команды </span><b><span id=t43>EntityRadius</span><span id=t43> объект, радиус#</span></b><span id=t9>. Ёто накладывает некоторые ограничени€ (зато сама проверка Ц очень быстро реализована) и как бы ваша фигура не выгл€дела Ц коллизи€ будет провер€тьс€ именно по какой-то сфере Ц т.е. допустим, у вас есть предмет Ц спичка Ц здесь вам придЄтс€ делать либо большую сферу, получа€ довольно приличное рассто€ние в середине спички между радиусом сферы соприкосновени€ и радиусом самой спички, либо сделать сферу поменьше, но сверху и снизу спичка будет вылезать из сферы (как вариант Ц только верхн€€ или нижн€€ часть) Ц т.е. тут уже эта выпирающа€ часть может залезть в другой объектЕ ну, со спичкой € оп€ть же утрирую Ц но, вот моделки людей, например, тоже не похожи на шары Ц так что рано или поздно, такой вопрос встанет, и о нЄм лучше подумать заранее Ц например, можно сделать более приземистых, коренастых юнитов Ц как в  вейке первом, напримерЕ</span><span id=t9></span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>ƒалее Ц насчЄт коллизиона. 1-е: этот самый коллизион происходит только при движении первого объекта внутрь второгоЕ 2-е:  оллизион Ц вещь односторонн€€ Ц т.е. если мы, как в примере, хотим, чтобы герой соприкасалс€ с врагами, а те, в свою очередь Ц с ним, то нам нужно писать две команды - Ђ оллизион между “ипом_√ероем и “ипом_¬рагомї и Ђ оллизион между “ипом_¬рагом и “ипом_√ероемїЕ а так как первый объект должен иметь именно —‘≈–” соприкосновени€, то единственный доступный метод здесь Ц первый! “ак что к сфере надо будет привыкнуть, и уже начинать думать, что с ними делатьЕ правда, € слышал о том, что разработчики думают сделать коллизиион по эллипсоиду, но когда это будет?Е </span><span id=t10><span id=t11>J</span></span><span id=t9></span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>“ак, незадолго до того, как € дописал туториал, вышел апдейт 1.82 (поэтому € тут немного дополн€ю </span><span id=t10><span id=t11>J</span></span><span id=t9>), где эллипсоидный метод столкновени€ уже реализован, правда удлин€ть или сплющивать можно только по </span><span id=t9>Y </span><span id=t9>оси, но и это неплохо! ≈сли € не ошибаюсь, нова€ команда выгл€дит так: </span><b><span id=t43>EntityRadius </span><span id=t43>объект, радиус по </span></b><b><span id=t43>X </span><span id=t43>и </span></b><b><span id=t43>Z</span><span id=t43>, радиус по </span></b><b><span id=t43>Y</span></b><span id=t9>...</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>¬от, в общем-то и вс€ основа 3ƒЕ понравилось? Ќу да прикололс€ € Ц ни фига ещЄ не всЄ!!! </span><span id=t10><span id=t11>J<span id=t11>J<span id=t11>J</span></span></span></span><span id=t9>!!! (хот€ самые основные части позади)</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8><span id=t9>“еперь будет намного интереснее. ѕри условии конечно, что вы старательно изучали все эти главы, на которые потратили лучшие минуты своей жизни (</span><span id=t10><span id=t11>J</span></span><span id=t9>) и большую часть пон€ли. „то же пора зан€тьс€ тем, о чЄм € там обещал наверху Ц парой простеньких игрушек!</span></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t8>&nbsp;<span id=t9></span></p> </td> <td id=t37> <p id=t8><span id=t9><span id=t15>†</span></span><b><span id=t16>ќглавление:</span></b></p> <p id=t8><span id=t9>&nbsp;</span></p> <p id=t17><span id=t18>0.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_0.htm">¬ведение</a></span></p> <p id=t17><span id=t18>1.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_1.htm">¬ начале была “ьма</a></span></p> <p id=t17><span id=t18>2.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_2.htm">≈сть ли жизнь в <span id=t20>DirectX</span></a></span></p> <p id=t17><span id=t18>3.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_3.htm">—вобода и ¬ласть 3ƒ (0)</a></span></p> <p id=t17><span id=t18>4.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_4.htm">—вобода и ¬ласть 3ƒ (1)</a></span></p> <p id=t17><span id=t18>5.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_5.htm">2ƒ в 3ƒ</a></span></p> <p id=t17><span id=t18>6.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_6.htm">“рЄхмерный курсор</a></span></p> <p id=t17><span id=t18>7.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_7.htm">–одительска€ зависимость или ѕрив€зки</a></span></p> <p id=t17><span id=t18>8.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_8.htm">‘ишки с прив€зками</a></span></p> <p id=t17><span id=t18>9.<span id=t19>&nbsp; </span></span><span id=t18><a href="Blitz_9.htm"> оллизион ƒетекшн или как устроен мирЕ</a></span></p> <p id=t21><span id=t18>10.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_10.htm">ѕерва€ 3ƒ игра. „асть 0 Ц основы движка</a></span></p> <p id=t21><span id=t18>11.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_11.htm">ѕерва€ 3ƒ игра. „асть 1 Ц разработка движка</a></span></p> <p id=t21><span id=t18>12.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_12.htm">ѕерва€ 3ƒ игра. „асть 2 Ц устранение багов</a></span></p> <p id=t21><span id=t18>13.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_13.htm">ѕерва€ 3ƒ игра. „асть 3 Ц внешний вид</a></span></p> <p id=t21><span id=t18>14.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_14.htm">ѕерва€ 3ƒ игра. „асть 4 Ц от массива к спискам</a></span></p> <p id=t21><span id=t18>15.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_15.htm">ѕерва€ 3ƒ игра. „асть 5 Ц оптимизаци€ кода</a></span></p> <p id=t21><span id=t18>16.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_16.htm">ѕерва€ 3ƒ игра. „асть 6 Ц завершение</a></span></p> <p id=t21><span id=t18>17.<span id=t19>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span id=t18><a href="Blitz_17.htm">¬ыведение</a></span></p> <p id=t8><span id=t18>&nbsp;</span></p> <p id=t6><span id=t18>&nbsp;</span></p> <p id=t8>&nbsp;<span id=t18></span></p> </td> </tr></table><p id=t6><span id=t20>&nbsp;</span></p></div></body></html>